pipeline {
    agent any
    
    tools {
        nodejs 'node18'
    }
    
    parameters {
        string(name: 'name', defaultValue: '', description: 'Nom et prénom de l\'utilisateur')
    }

    stages {
        stage('Git-Pull') {
            steps {
                 git 'https://github.com/Vandal-William/GitHub-jenkins-project.git'
            }
        }
        stage('install') {
            steps {
                sh 'npm i'
                sh 'npm run build'
                dir('app') {
                    sh 'npm i' 
                }
            }
        }
        stage('Create New Job') {
            steps {
                script {
                    def jobName = "${env.JOB_NAME}"
                    def newName = "${jobName}_${params.name}"
                    jobDsl scriptText: """
                        job('${newName}') {
                            description('Nouveau Job créé par Jenkinsfile')
                            // Ajouter d'autres propriétés du job ici
                            properties {
                                // Définir des propriétés du job ici
                            }
                            parameters {
                                // Définir des paramètres de build ici
                            }
                            // Ajouter des étapes de build ici
                            steps {
                                // Ajouter un script shell pour copier le répertoire du job parent
                                def cmd = "cp -r ${env.WORKSPACE} ${newName}"
                                def status = cmd.execute()
                                if (status != 0) {
                                    throw new Exception("La commande a échoué : " + cmd)
                                }    
                            }
                        }
                    """
                }
            }
        }
    
    }

    post {
        success {
            sh 'echo sucess'
            // Ici, vous pouvez ajouter des étapes supplémentaires à effectuer après le succès de la construction
        }

        failure {
            // Ici, vous pouvez ajouter des étapes supplémentaires à effectuer en cas d'échec de la construction
            sh 'echo Erreur'
        }
    }
}
